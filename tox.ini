[tox]
requires =
    tox>=4.2
    tox-uv>=1.11.3
env_list =
    fix
    3.13
    3.12
    3.11
    3.10
    3.9
    type
    readme
skip_missing_interpreters = true

[testenv]
description = run the tests with pytest
package = wheel
wheel_build_env = .pkg
extras =
    test
set_env =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}{/}.coverage.{envname}}
commands =
    coverage erase
    coverage run -m pytest {tty:--color=yes} \
      --junitxml {toxworkdir}{/}junit.{envname}.xml \
      {posargs:tests}
    coverage combine
    coverage report
    coverage html -d {envtmpdir}{/}htmlcov

[testenv:fix]
description = run static analysis and style check using flake8
skip_install = true
deps =
    pre-commit-uv>=4.1
pass_env =
    HOMEPATH
    PROGRAMDATA
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:type]
description = run type check on code base
deps =
    mypy==1.11.2
commands =
    mypy --strict src
    mypy --strict tests

[testenv:readme]
description = check that the long description is valid
skip_install = true
deps =
    build[uv]>=1.2.2
    twine>=5.1.1
change_dir = {toxinidir}
commands =
    pyproject-build --installer uv -o {envtmpdir} .
    twine check {envtmpdir}/*

[testenv:dev]
description = generate a DEV environment
package = editable
extras =
    test
commands =
    uv pip tree
    python -c 'import sys; print(sys.executable)'
