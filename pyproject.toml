[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs>=0.3",
  "hatchling>=1.18",
]

[project]
name = "pytest-env"
description = "pytest plugin that allows you to add environment variables."
readme = "README.md"
keywords = [
  "env",
  "pytest",
]
license.file = "LICENSE"
maintainers = [{ name = "Bernát Gábor", email = "gaborjbernat@gmail.com" }]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = [
  "version",
]
dependencies = [
  "pytest>=7.4.3",
  'tomli>=2.0.1; python_version < "3.11"',
]
optional-dependencies.test = [
  "covdefaults>=2.3",
  "coverage>=7.3.2",
  "pytest-mock>=3.12",
]
urls.Homepage = "https://github.com/pytest-dev/pytest-env"
urls.Source = "https://github.com/pytest-dev/pytest-env"
urls.Tracker = "https://github.com/pytest-dev/pytest-env/issues"
[project.entry-points.pytest11]
env = "pytest_env.plugin"

[tool.hatch]
build.hooks.vcs.version-file = "src/pytest_env/version.py"
version.source = "vcs"

[tool.black]
line-length = 120

[tool.ruff]
select = ["ALL"]
line-length = 120
target-version = "py38"
isort = {known-first-party = ["pytest_env"], required-imports = ["from __future__ import annotations"]}
ignore = [
  "ANN101",  # no type annotation for self
  "ANN401",  # allow Any as type annotation
  "D203",  # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible
  "D212",  # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible
  "S104",  # Possible binding to all interface
]
[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
  "S101",  # asserts allowed in tests...
  "FBT",  # don"t care about booleans as positional arguments in tests
  "INP001", # no implicit namespace
  "D",  # don"t care about documentation in tests
  "S603",  # `subprocess` call: check for execution of untrusted input
  "PLR2004",  # Magic value used in comparison, consider replacing with a constant variable
]

[tool.isort]
profile = "black"
known_first_party = ["pytest_env"]

[tool.coverage]
run.source = ["pytest_env", "tests"]
run.dynamic_context = "test_function"
run.branch = true
run.parallel = true
run.plugins = ["covdefaults"]
report.fail_under = 100
report.show_missing = true
html.show_contexts = true
html.skip_covered = false
paths.source = [
  "src",
  ".tox*/*/lib/python*/site-packages",
  ".tox*/pypy*/site-packages",
  ".tox*\\*\\Lib\\site-packages",
  "*/src",
  "*\\src",
]

[tool.mypy]
python_version = "3.11"
show_error_codes = true
strict = true
